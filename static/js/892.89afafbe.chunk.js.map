{"version":3,"file":"static/js/892.89afafbe.chunk.js","mappings":"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","sources":["componenst/hocs/withAuthRedirect.js","componenst/profile/profileInfo/ProfileStatusWithHooks.js","componenst/profile/profileInfo/ProfileInfo.js","componenst/profile/myposts/posts/Post.js","componenst/profile/myposts/MyPosts.js","componenst/profile/myposts/MyPostsContainer.js","componenst/profile/Profile.js","componenst/profile/ProfileContainer.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect(Component) {\r\n     const RedirectComponent = (props) =>  {\r\n        if (!props.isAuth) return <Navigate to={'/login'} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect, {})(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nexport default function ProfileStatusWithHooks({props}) {\r\n    const [status, setStatus] = useState(props.status)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    function activateEditMode () {\r\n        return setEditMode(true)\r\n    }\r\n\r\n    function deactivateEditMOde () {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    function onStatusChange(e) {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile__status__wrapper\">\r\n            <div className=\"profile__status\">\r\n                {!editMode &&\r\n                    <div onClick={activateEditMode} className=\"status__text\">\r\n                        {status || '----'}\r\n                    </div>}\r\n\r\n                {editMode &&\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMOde}\r\n                        className=\"status__input\"\r\n                        value={status}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import Preloader from \"../../common/Preloader\";\r\nimport avaPlug from \"../../../assets/images/ava.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nexport function ProfileInfo({props}){\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"info__wrapper\">\r\n            <div className=\"info__avatar\">\r\n                <img src={props.profile.photos.small ? props.profile.photos.small : avaPlug} alt=\"\"/>\r\n            </div>\r\n            <ProfileStatusWithHooks props={props}/>\r\n            <div className=\"info__description\">\r\n                <div className=\"info__name\">{props.profile.fullName}</div>\r\n                <div className=\"info__about\">{props.profile.aboutMe}</div>\r\n                <div className=\"job__wrapper\">\r\n                    <div className=\"job__looking\">JOB: {props.profile.lookingForAJob ? 'YES' : 'NO'}</div>\r\n                    <div className=\"job__looking\">{props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n                <div className=\"contact__wrapper\">\r\n                    {Object.values(props.profile.contacts).map((contact, index) => {return <div key={index}>{contact}</div>})}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export function Post({post, like}) {\r\n    return (\r\n        <div className=\"post__item__wrapper\">\r\n            <div className=\"post__avatar\"></div>\r\n            <div className=\"post__text\">{post}</div>\r\n            <div className=\"post__setup\">\r\n                <div className=\"post__likes\">Likes: {like}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Post} from \"./posts/Post\";\r\nimport React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport RoundedButton from \"../../common/buttons/rounded-btn/RoundedButton\";\r\n\r\n\r\n\r\nexport function MyPosts({ props }) {\r\n\r\n    return (\r\n        <div className=\"posts__wrapper\">\r\n            <div>\r\n                <h3>My post</h3>\r\n            </div>\r\n            <div className=\"post__wrapper\">\r\n                <div className=\"new__post__wrapper\">\r\n                    <AddPostForm updateNewPostText={props.updateNewPostText} addPost={props.addPost}/>\r\n                </div>\r\n                <div>\r\n                    {props.postsData.map(el => <Post key={el.id} post={el.post} like={el.likes} id={el.id}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddPostForm ({updateNewPostText, addPost}) {\r\n    const addNewPost = (values) => {\r\n        updateNewPostText( values )\r\n        addPost()\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ newPostBody: \"\" }}\r\n            onSubmit={(values, {resetForm}) => {\r\n                addNewPost( values.newPostBody )\r\n                resetForm( {values: ''} )}}>\r\n            {() => (\r\n                <Form>\r\n                    <div className=\"\">\r\n                        <Field\r\n                            name={'newPostBody'}\r\n                            as={'textarea'}\r\n                            placeholder={'enter text'}/>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                        <RoundedButton logo={'Send'} type={'submit'}/>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../state/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction MyPostContainer(props) {\r\n    return (\r\n        <MyPosts\r\n            props={props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postsData: state.profilePage.posts\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        },\r\n        addPost: () => {\r\n           dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(MyPostContainer))","import {ProfileInfo} from \"./profileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myposts/MyPostsContainer\";\r\n\r\nexport function Profile({props}) {\r\n\r\n    return (\r\n        <div className='profile__wrapper'>\r\n            <div className='profile__img__wrapper'>\r\n            </div>\r\n            <ProfileInfo props={props}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Profile} from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../state/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hocs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.loggedUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                props={this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        loggedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","_jsx","_objectSpread","Navigate","to","ProfileStatusWithHooks","_ref","_useState","useState","status","_useState2","_slicedToArray","setStatus","_useState3","_useState4","editMode","setEditMode","useEffect","className","children","_jsxs","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","photos","small","avaPlug","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","values","contacts","map","contact","index","Preloader","Post","post","like","MyPosts","AddPostForm","updateNewPostText","addPost","postsData","el","likes","id","_ref2","Formik","initialValues","newPostBody","onSubmit","_ref3","resetForm","addNewPost","Form","Field","name","as","placeholder","RoundedButton","logo","type","MyPostContainer","newPostText","profilePage","posts","dispatch","text","updateNewPostTextActionCreator","addPostActionCreator","React","Profile","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","router","params","loggedUserId","getUserProfile","getStatus","compose","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}