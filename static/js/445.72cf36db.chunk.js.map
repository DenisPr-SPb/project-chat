{"version":3,"file":"static/js/445.72cf36db.chunk.js","mappings":"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","sources":["componenst/hocs/withAuthRedirect.js","componenst/profile/profileInfo/ProfileStatus.js","componenst/profile/profileInfo/profileData/ProfileData.module.css","componenst/profile/profileInfo/profileData/ProfileData.js","componenst/profile/profileInfo/profileData/ProfileDataForm.js","webpack://chat/./src/componenst/profile/profileInfo/ProfileInfo.module.css?ff1f","componenst/profile/profileInfo/ProfileInfo.js","componenst/profile/myposts/posts/Post.js","componenst/profile/myposts/MyPosts.js","componenst/profile/myposts/MyPostsContainer.js","componenst/profile/Profile.module.css","componenst/profile/Profile.js","componenst/profile/ProfileContainer.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect(Component) {\r\n     const RedirectComponent = (props) =>  {\r\n        if (!props.isAuth) return <Navigate to={'/login'} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect, {})(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nexport default function ProfileStatus({props}) {\r\n    const [status, setStatus] = useState(props.status)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    function activateEditMode () {\r\n        return setEditMode(true)\r\n    }\r\n\r\n    function deactivateEditMOde () {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    function onStatusChange(e) {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile__status__wrapper\">\r\n            <div className=\"profile__status\" style={{display:\"flex\"}}>\r\n                <div>Status: </div>\r\n                {!editMode &&\r\n                    <div onClick={activateEditMode} className=\"status__text\">\r\n                        {status || '----'}\r\n                    </div>}\r\n\r\n                {editMode &&\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMOde}\r\n                        className=\"status__input\"\r\n                        value={status}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"info__description__container\":\"ProfileData_info__description__container__gi1Qq\",\"info__name\":\"ProfileData_info__name__wojJH\",\"info__about\":\"ProfileData_info__about__idj9T\",\"job__wrapper\":\"ProfileData_job__wrapper__9pfB4\",\"job__looking\":\"ProfileData_job__looking__Q0Ip6\",\"contact__wrapper\":\"ProfileData_contact__wrapper__KqXFt\",\"editor\":\"ProfileData_editor__fnQ4u\",\"input\":\"ProfileData_input__Mplzj\"};","import RoundedButton from \"../../../common/buttons/rounded-btn/RoundedButton\";\r\nimport style from \"./ProfileData.module.css\"\r\n\r\nfunction Contacts ({contactKey, contactValue}) {\r\n    return (\r\n        <div>{contactKey}: {contactValue}</div>\r\n    )\r\n}\r\n\r\nexport default function ProfileData({profile, isOwner, goToEditMode }) {\r\n\r\n    return (\r\n        <div className={style.info__description__container}>\r\n            <div className={style.info__name}>Name: {profile.fullName}</div>\r\n            <div className={style.info__about}>About me: {profile.aboutMe}</div>\r\n            <div className={style.job__wrapper}>\r\n                <div className={style.job__looking}>Looking for a job: {profile.lookingForAJob ? 'YES' : 'NO'}</div>\r\n                {profile.lookingForAJob &&\r\n                    <div className={style.job__looking}>My skills: {profile.lookingForAJobDescription}</div>\r\n                }\r\n            </div>\r\n            <div className={style.contact__wrapper}>\r\n                Contacts: {Object.keys(profile.contacts).map((key) => {\r\n                return <Contacts key={key} contactKey={key} contactValue={profile.contacts[key]}/>\r\n            })\r\n            }\r\n            </div>\r\n            { isOwner && <RoundedButton logo={'edit'} action={goToEditMode}/>}\r\n        </div>\r\n    )\r\n}","import RoundedButton from \"../../../common/buttons/rounded-btn/RoundedButton\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport style from \"./ProfileData.module.css\";\r\n\r\nexport default function ProfileDataForm({profile, updateProfileData,savePhoto}) {\r\n    function addNewProfileData(values) {\r\n        updateProfileData(values)\r\n    }\r\n\r\n    const initialValues = profile\r\n    !profile.aboutMe ? initialValues.aboutMe = '' : initialValues.aboutMe = profile.aboutMe\r\n\r\n    function jobLookingStatus(e) {\r\n        initialValues.lookingForAJob = e.target.value !== 'true';\r\n    }\r\n\r\n    function onAvatarPhotoSelected(e) {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile__form\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(values, {resetForm}) => {\r\n                    addNewProfileData( values )\r\n                    resetForm( {values: ''} )}}>\r\n                {() => (\r\n                    <Form>\r\n                        <div className=\"form__fields\">\r\n                            {Object.keys(initialValues)\r\n                                .filter(key => {\r\n                                    return (key !== 'lookingForAJob'\r\n                                        && key !== 'lookingForAJobDescription'\r\n                                        && key !== 'contacts'\r\n                                        && key !== 'photos'\r\n                                        && key !== 'userId')\r\n                                } ).map(value => {\r\n                               return <div key={value}><span>{value}</span> <Field className=\"field\" key={value} name={value} placeholder={value}/></div>\r\n                            })}\r\n\r\n                            <label>\r\n                                Looking for a job:\r\n                                <Field type={'checkbox'} name={'lookingForAJob'} onClick={jobLookingStatus}/>\r\n                            </label>\r\n                            {initialValues.lookingForAJob && <div>\r\n                                <span>About my skills:</span>\r\n                                <Field\r\n                                    name={'lookingForAJobDescription'}\r\n                                    placeholder={'what about job?'}/>\r\n                            </div>}\r\n\r\n                            <div className=\"form__contacts\">\r\n                                <span>CONTACTS:</span>\r\n                                {Object.keys(initialValues.contacts)\r\n                                    .map(key => {\r\n                                        if (initialValues.contacts[key] === null) {\r\n                                           initialValues.contacts[key] = ''\r\n                                        }\r\n                                        return (\r\n                                            <div key={`div-${key}`}>\r\n                                                <span key={`span-${key}`}>{key}</span>\r\n                                                <Field className=\"field\" key={key} name={`contacts.${key}`} placeholder={key}/>\r\n                                            </div>\r\n                                        )\r\n                                    } )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"\">\r\n                            <RoundedButton logo={'Send'} type={'submit'}/>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n            <div>\r\n                <label> Change avatar:</label>\r\n                <input className={style.input} type={'file'} onChange={onAvatarPhotoSelected}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"info__wrapper\":\"ProfileInfo_info__wrapper__KP3ip\",\"avatar__container\":\"ProfileInfo_avatar__container__Mt2yk\",\"description__container\":\"ProfileInfo_description__container__ZYUXG\",\"info__avatar\":\"ProfileInfo_info__avatar__XWn1K\"};","import Preloader from \"../../common/Preloader\";\r\nimport avaPlug from \"../../../assets/images/ava.jpg\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {useState} from \"react\";\r\nimport ProfileData from \"./profileData/ProfileData\";\r\nimport ProfileDataForm from \"./profileData/ProfileDataForm\";\r\nimport style from \"./ProfileInfo.module.css\"\r\n\r\nexport function ProfileInfo({props, isOwner, savePhoto, saveProfileData}){\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    function onUpdateProfileData(formData){\r\n        saveProfileData(formData)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className={style.info__wrapper}>\r\n            <div className={style.avatar__container}>\r\n                <div className={style.info__avatar}>\r\n                    <img src={props.profile.photos.small ? props.profile.photos.small : avaPlug} alt=\"\"/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={style.description__container}>\r\n                <ProfileStatus props={props}/>\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm profile={props.profile} updateProfileData={onUpdateProfileData} savePhoto={savePhoto}/>\r\n                    : <ProfileData profile={props.profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export function Post({post, like}) {\r\n    return (\r\n        <div className=\"post__item__wrapper\">\r\n            <div className=\"post__avatar\"></div>\r\n            <div className=\"post__text\">{post}</div>\r\n            <div className=\"post__setup\">\r\n                <div className=\"post__likes\">Likes: {like}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Post} from \"./posts/Post\";\r\nimport React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport RoundedButton from \"../../common/buttons/rounded-btn/RoundedButton\";\r\n\r\n\r\n\r\nexport function MyPosts({ props }) {\r\n\r\n    return (\r\n        <div className=\"posts__wrapper\">\r\n            <div>\r\n                <h3>My post</h3>\r\n            </div>\r\n            <div className=\"post__wrapper\">\r\n                <div className=\"new__post__wrapper\">\r\n                    <AddPostForm updateNewPostText={props.updateNewPostText} addPost={props.addPost}/>\r\n                </div>\r\n                <div>\r\n                    {props.postsData.map(el => <Post key={el.id} post={el.post} like={el.likes} id={el.id}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddPostForm ({updateNewPostText, addPost}) {\r\n    const addNewPost = (values) => {\r\n        updateNewPostText( values )\r\n        addPost()\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ newPostBody: \"\" }}\r\n            onSubmit={(values, {resetForm}) => {\r\n                addNewPost( values.newPostBody )\r\n                resetForm( {values: ''} )}}>\r\n            {() => (\r\n                <Form>\r\n                    <div className=\"\">\r\n                        <Field\r\n                            name={'newPostBody'}\r\n                            as={'textarea'}\r\n                            placeholder={'enter text'}/>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                        <RoundedButton logo={'Send'} type={'submit'}/>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../state/profile-reducer.ts\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction MyPostContainer(props) {\r\n    return (\r\n        <MyPosts\r\n            props={props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postsData: state.profilePage.posts\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        },\r\n        addPost: () => {\r\n           dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(MyPostContainer))","// extracted by mini-css-extract-plugin\nexport default {\"profile__wrapper\":\"Profile_profile__wrapper__A2QPH\"};","import {ProfileInfo} from \"./profileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myposts/MyPostsContainer\";\r\nimport style from \"./Profile.module.css\"\r\n\r\nexport function Profile({props, isOwner, savePhoto, saveProfileData}) {\r\n    return (\r\n        <div className={style.profile__wrapper}>\r\n            <ProfileInfo props={props} isOwner={isOwner} savePhoto={savePhoto} saveProfileData={saveProfileData}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Profile} from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfileData, updateStatus} from \"../../state/profile-reducer.ts\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hocs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    profileRefresh() {\r\n        let userId = this.props.router.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.loggedUserId.toString()\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.profileRefresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.profileRefresh()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                isOwner={!this.props.router.params.userId}\r\n                props={this.props}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfileData={this.props.saveProfileData}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        loggedUserId: state.auth.userId,\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfileData}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","_jsx","_objectSpread","Navigate","to","ProfileStatus","_ref","_useState","useState","status","_useState2","_slicedToArray","setStatus","_useState3","_useState4","editMode","setEditMode","useEffect","className","children","_jsxs","style","display","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Contacts","contactKey","contactValue","ProfileData","_ref2","profile","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","RoundedButton","logo","action","ProfileDataForm","updateProfileData","savePhoto","initialValues","jobLookingStatus","target","Formik","onSubmit","values","resetForm","addNewProfileData","Form","filter","Field","name","placeholder","type","concat","files","length","ProfileInfo","saveProfileData","Preloader","src","photos","small","avaPlug","alt","formData","Post","post","like","MyPosts","AddPostForm","updateNewPostText","addPost","postsData","el","likes","id","newPostBody","_ref3","addNewPost","as","MyPostContainer","newPostText","profilePage","posts","dispatch","text","updateNewPostTextActionCreator","addPostActionCreator","React","Profile","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","router","params","loggedUserId","toString","getUserProfile","getStatus","profileRefresh","prevProps","prevState","snapshot","compose","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}