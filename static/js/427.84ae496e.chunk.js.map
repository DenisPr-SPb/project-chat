{"version":3,"file":"static/js/427.84ae496e.chunk.js","mappings":"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","sources":["componenst/formValidation/LoginFormSchema.js","componenst/login/Login.js","componenst/login/LoginContainer.js"],"sourcesContent":["import * as Yup from \"yup\";\r\n\r\nconst loginFormSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(5, \"Must be longer than 5 characters\")\r\n        .required(\"Required\"),\r\n    password: Yup.string()\r\n        .min(8, \"Must be longer than 8 characters\")\r\n        .max(50, \"Nice try, must be less than 50 characters\")\r\n        .required(\"Required\")\r\n});\r\nexport default loginFormSchema;","import React from \"react\";\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport loginFormSchema from \"../formValidation/LoginFormSchema\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default function Login ({login, isAuth, error}) {\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <NavLink to='/profile'>Profile</NavLink>\r\n    }\r\n\r\n    return (\r\n        <div className=\"login__wrapper\">\r\n            <div className=\"login__title\">\r\n                <h1>Login</h1>\r\n            </div>\r\n            <div className=\"login__form__wrapper\">\r\n                <Formik initialValues={initialValues}\r\n                        validate={values => {\r\n                            const errors = {};\r\n                            if (!values.email) {\r\n                                errors.email = 'Required';\r\n                            }\r\n                            return errors;\r\n                        }}\r\n                        onSubmit={(values) => {\r\n                            const {email, password, rememberMe} = values\r\n                            login(email, password, rememberMe)\r\n                        }}\r\n                        validationSchema={loginFormSchema}>\r\n                    {() => (\r\n                        <Form className=\"form__wrapper\">\r\n                            <div className=\"form__item\">\r\n                                <Field type={'text'} name={'email'} placeholder={'email'}/>\r\n                            </div>\r\n                            <ErrorMessage name=\"email\" component=\"div\"/>\r\n\r\n                            <div className=\"form__item\">\r\n                                <Field type={'password'} name={'password'} placeholder={'password'}/>\r\n                            </div>\r\n                            <ErrorMessage name=\"password\" component=\"div\"/>\r\n\r\n                            <div className=\"form__item\">\r\n                                <Field type={'checkbox'} name={'rememberMe'}/>\r\n                                <label htmlFor={'rememberMe'}> remember me </label>\r\n                            </div>\r\n\r\n                            <div className=\"form__item\">\r\n                                <button type={'submit'}>Log in</button>\r\n                                {error && <div style={{color: 'red'}}>{error}</div>}\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../state/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Login\r\n                login={this.props.login}\r\n                isAuth={this.props.isAuth}\r\n                error={this.props.error}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login})\r\n)(LoginContainer)"],"names":["Yup","shape","email","min","required","password","max","Login","_ref","login","isAuth","error","_jsx","NavLink","to","children","_jsxs","className","Formik","initialValues","rememberMe","validate","values","errors","onSubmit","validationSchema","loginFormSchema","Form","Field","type","name","placeholder","ErrorMessage","component","htmlFor","style","color","LoginContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","React","compose","connect","state","auth"],"sourceRoot":""}