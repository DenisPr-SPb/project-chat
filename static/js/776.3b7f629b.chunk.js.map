{"version":3,"file":"static/js/776.3b7f629b.chunk.js","mappings":"+NAEO,SAASA,EAAUC,GAAkB,IAAhBC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAC9B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAE,YAAAC,OAAcN,GAASG,SAAEJ,KAGhD,C,iCCHO,SAASQ,EAAOT,GAAa,IAAVU,EAAKV,EAALU,MACtB,OAAKA,EAAMC,QAKPC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,mBAAkBC,SAAA,EAC7BO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAC1BK,EAAMG,YAAYC,WAAWC,KAAI,SAAAC,GAAS,OAAIb,EAAAA,EAAAA,KAACJ,EAAU,CAAoBE,KAAMe,EAAUf,KAAMC,OAAQc,EAAUC,IAAtDD,EAAUC,GAAiD,OAE/Hd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,SACvBK,EAAMG,YAAYK,SAASH,KAAI,SAAAI,GAAG,OAAIhB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SAAec,EAAIC,SAAbD,EAAIF,GAAuB,UAG1Gd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,KAACkB,EAAc,CAACC,YAAaZ,EAAMY,YAAaC,qBAAsBb,EAAMa,6BAd7EpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAQ,CAACjB,GAAI,UAkB7B,CAEA,SAASc,EAAcI,GAAuC,IAArCF,EAAoBE,EAApBF,qBAAsBD,EAAWG,EAAXH,YAK3C,OACInB,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CACHC,cAAe,CAAEC,eAAgB,IACjCC,SAAU,SAACC,EAAMC,GAAmB,IAAhBC,EAASD,EAATC,WAPN,SAACF,GACnBP,EAAsBO,EAC1B,CAMYG,CAAeH,EAAOF,gBACtBN,IACAU,EAAW,CAACF,OAAQ,IAAK,EAAEzB,SAC9B,kBACGF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAI,CAAA7B,UACDO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,8BAA6BC,SAAA,EACxCF,EAAAA,EAAAA,KAACgC,EAAAA,GAAK,CACFlC,KAAM,iBACNmC,GAAI,WACJC,YAAa,gBAEjBlC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACtCF,EAAAA,EAAAA,KAACmC,EAAAA,EAAa,CAACC,KAAM,OAAQC,KAAM,iBAGxC,GAIvB,C,kCC/CMC,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAOjB,OAPiBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAC,MAClB,WACI,OACIhD,EAAAA,EAAAA,KAACM,EAAO,CACJC,MAAO0C,KAAK1C,OAGxB,KAAC+B,CAAA,CAPiB,CAASY,EAAAA,WA2B/B,OAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAlBJ,SAA0BC,GACtB,MAAO,CACH3C,YAAa2C,EAAMC,WAE3B,IAEA,SAA6BC,GACzB,MAAO,CACHnC,qBAAsB,SAACoC,GACnBD,GAASE,EAAAA,EAAAA,IAA4BD,GACzC,EACArC,YAAa,WACToC,GAASG,EAAAA,EAAAA,MACb,EAER,IAIIC,EAAAA,EAFJ,CAGErB,E,4GClCEsB,EAA6B,SAACP,GAC9B,MAAO,CACH7C,OAAQ6C,EAAMQ,KAAKrD,OAE3B,EAEO,SAASmD,EAAiBG,GAM7B,OAAOV,EAAAA,EAAAA,IAAQQ,EAA4B,CAAC,EAArCR,EALoB,SAAC7C,GACxB,OAAKA,EAAMC,QACJR,EAAAA,EAAAA,KAAC8D,GAASC,EAAAA,EAAAA,GAAA,GAAKxD,KADIP,EAAAA,EAAAA,KAACqB,EAAAA,GAAQ,CAACjB,GAAI,UAE5C,GAGJ,C","sources":["componenst/dialogs/DialogItem.js","componenst/dialogs/Dialogs.js","componenst/dialogs/DialogsContainer.js","componenst/hocs/withAuthRedirect.js"],"sourcesContent":["import {NavLink} from \"react-router-dom\";\r\n\r\nexport function DialogItem({name, pathId}) {\r\n    return (\r\n        <div className=\"dialog__name\">\r\n            <NavLink to={`/dialogs/${pathId}`}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}","import {DialogItem} from \"./DialogItem\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport RoundedButton from \"../common/buttons/rounded-btn/RoundedButton\";\r\n\r\nexport function Dialogs({ props }) {\r\n    if (!props.isAuth) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogs__wrapper\">\r\n            <div className=\"dialog__info\">\r\n                <div className=\"dialogs__items\">\r\n                    {props.dialogsPage.companions.map(companion => <DialogItem key={companion.id} name={companion.name} pathId={companion.id}/>)}\r\n                </div>\r\n                <div className=\"dialog__msg\">\r\n                    {props.dialogsPage.messages.map(msg => <div className=\"msg__item\" key={msg.id}>{msg.message}</div>)}\r\n                </div>\r\n            </div>\r\n            <div className=\"dialog__text__wrapper\">\r\n                <AddMessageForm sendMessage={props.sendMessage} updateNewMessageText={props.updateNewMessageText}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddMessageForm({updateNewMessageText, sendMessage}) {\r\n    const addNewMessage = (values) => {\r\n        updateNewMessageText( values )\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ newMessageBody: \"\" }}\r\n            onSubmit={(values, {resetForm}) => {\r\n                addNewMessage( values.newMessageBody )\r\n                sendMessage()\r\n                resetForm( {values: ''} )}}>\r\n            {() => (\r\n                <Form>\r\n                    <div className=\"dialog__text__area__wrapper\">\r\n                        <Field\r\n                            name={'newMessageBody'}\r\n                            as={'textarea'}\r\n                            placeholder={'enter text'}/>\r\n\r\n                        <div className=\"new__dialog__btn__wrapper\">\r\n                            <RoundedButton logo={'Send'} type={'submit'}/>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageTextCreator} from \"../../state/dialog-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hocs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Dialogs\r\n                props={this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        dialogsPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n    return {\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextCreator(text))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(DialogsContainer)","import React from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect(Component) {\r\n     const RedirectComponent = (props) =>  {\r\n        if (!props.isAuth) return <Navigate to={'/login'} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect, {})(RedirectComponent)\r\n}"],"names":["DialogItem","_ref","name","pathId","_jsx","className","children","NavLink","to","concat","Dialogs","props","isAuth","_jsxs","dialogsPage","companions","map","companion","id","messages","msg","message","AddMessageForm","sendMessage","updateNewMessageText","Navigate","_ref2","Formik","initialValues","newMessageBody","onSubmit","values","_ref3","resetForm","addNewMessage","Form","Field","as","placeholder","RoundedButton","logo","type","DialogsContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","React","compose","connect","state","dialogPage","dispatch","text","updateNewMessageTextCreator","sendMessageCreator","withAuthRedirect","mapStateToPropsForRedirect","auth","Component","_objectSpread"],"sourceRoot":""}