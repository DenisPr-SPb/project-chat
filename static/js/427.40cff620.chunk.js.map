{"version":3,"file":"static/js/427.40cff620.chunk.js","mappings":"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","sources":["componenst/formValidation/LoginFormSchema.js","componenst/login/Login.js","componenst/login/LoginContainer.js"],"sourcesContent":["import * as Yup from \"yup\";\r\n\r\nconst loginFormSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(5, \"Must be longer than 5 characters\")\r\n        .required(\"Required\"),\r\n    password: Yup.string()\r\n        .min(3, \"Must be longer than 3 characters\")\r\n        .max(50, \"Nice try, must be less than 50 characters\")\r\n        .required(\"Required\")\r\n});\r\nexport default loginFormSchema;","import React from \"react\";\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport loginFormSchema from \"../formValidation/LoginFormSchema\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport RoundedButton from \"../common/buttons/rounded-btn/RoundedButton\";\r\n\r\nexport default function Login ({login, isAuth, error, captchaUrl}) {\r\n    const navigate = useNavigate()\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        captchaInput: ''\r\n    }\r\n\r\n    if (isAuth) {\r\n        setTimeout(() => navigate('/profile'));\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"login__wrapper\">\r\n            <div className=\"login__title\">\r\n                <h1>Login</h1>\r\n            </div>\r\n            <div className=\"login__form__wrapper\">\r\n                <Formik initialValues={initialValues}\r\n                        validate={values => {\r\n                            const errors = {};\r\n                            if (!values.email) {\r\n                                errors.email = 'Required';\r\n                            }\r\n                            return errors;\r\n                        }}\r\n                        onSubmit={(values) => {\r\n                            const {email, password, rememberMe, captchaInput} = values\r\n                            login(email, password, rememberMe, captchaInput)\r\n                        }}\r\n                        validationSchema={loginFormSchema}>\r\n                    {() => (\r\n                        <Form className=\"form__wrapper\">\r\n                            <div className=\"form__item\">\r\n                                <Field type={'text'} name={'email'} placeholder={'email'}/>\r\n                            </div>\r\n                            <ErrorMessage name=\"email\" component=\"div\"/>\r\n\r\n                            <div className=\"form__item\">\r\n                                <Field type={'password'} name={'password'} placeholder={'password'}/>\r\n                            </div>\r\n                            <ErrorMessage name=\"password\" component=\"div\"/>\r\n\r\n                            <div className=\"form__item\">\r\n                                <Field type={'checkbox'} name={'rememberMe'}/>\r\n                                <label htmlFor={'rememberMe'}> remember me </label>\r\n                            </div>\r\n\r\n                            <div className=\"form__item\">\r\n                                <RoundedButton logo={'Log in'} type={'submit'}/>\r\n                                {error && <div style={{color: 'red'}}>{error}</div>}\r\n                            </div>\r\n\r\n                            {captchaUrl && <img src={captchaUrl} alt={'captcha'}/>}\r\n                            {captchaUrl && <div className=\"form__item\">\r\n                                <Field type={'text'} name={'captchaInput'} placeholder={'enter symbols from the picture'}/>\r\n                                <RoundedButton logo={'Submit'} type={'submit'}/>\r\n                            </div>}\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../state/auth-reducer.ts\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Login\r\n                login={this.props.login}\r\n                isAuth={this.props.isAuth}\r\n                error={this.props.error}\r\n                captchaUrl={this.props.captchaUrl}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        captchaUrl: state.auth.captcha,\r\n        isAuth: state.auth.isAuth,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login})\r\n)(LoginContainer)"],"names":["Yup","shape","email","min","required","password","max","Login","_ref","login","isAuth","error","captchaUrl","navigate","useNavigate","setTimeout","_jsx","_Fragment","_jsxs","className","children","Formik","initialValues","rememberMe","captchaInput","validate","values","errors","onSubmit","validationSchema","loginFormSchema","Form","Field","type","name","placeholder","ErrorMessage","component","htmlFor","RoundedButton","logo","style","color","src","alt","LoginContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","React","compose","connect","state","auth","captcha"],"sourceRoot":""}