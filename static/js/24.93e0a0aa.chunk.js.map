{"version":3,"file":"static/js/24.93e0a0aa.chunk.js","mappings":"qLAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,EAEO,SAASE,EAAiBC,GAM7B,OAAOC,EAAAA,EAAAA,IAAQN,EAA4B,CAAC,EAArCM,EALoB,SAACC,GACxB,OAAKA,EAAML,QACJM,EAAAA,EAAAA,KAACH,GAASI,EAAAA,EAAAA,GAAA,GAAKF,KADIC,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAI,UAE5C,GAGJ,C,iLCde,SAASC,EAAsBC,GAAW,IAATN,EAAKM,EAALN,MAC5CO,GAA4BC,EAAAA,EAAAA,UAASR,EAAMS,QAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3CE,EAAMC,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAmB5B,OAjBAG,EAAAA,EAAAA,YAAU,WACNL,EAAUZ,EAAMS,OACpB,GAAG,CAACT,EAAMS,UAgBNR,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,2BAA0BC,UACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAkBG,MAAO,CAACC,QAAQ,QAAQH,SAAA,EACrDlB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,cACHJ,IACEd,EAAAA,EAAAA,KAAA,OAAKsB,QAlBrB,WACI,OAAOP,GAAY,EACvB,EAgBgDE,UAAU,eAAcC,SACnDV,GAAU,SAGlBM,IACGd,EAAAA,EAAAA,KAAA,SACIuB,SAfpB,SAAwBC,GACpBb,EAAUa,EAAEC,cAAcC,MAC9B,EAcoBC,WAAW,EACXC,OAtBpB,WACIb,GAAY,GACZhB,EAAM8B,aAAarB,EACvB,EAoBoBS,UAAU,gBACVS,MAAOlB,QAI/B,C,uBCvCe,SAASsB,EAAezB,GAAgC,IAA9B0B,EAAO1B,EAAP0B,QAASC,EAAiB3B,EAAjB2B,kBAK9C,IAAMC,EAAgBF,EAGtB,SAASG,EAAiBV,GACtBS,EAAcE,eAAoC,SAAnBX,EAAEY,OAAOV,KAC5C,CAEA,OANCK,EAAQM,QAAuCJ,EAAcI,QAAUN,EAAQM,QAA7DJ,EAAcI,QAAU,IAOvCrC,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,gBAAeC,UAC1BlB,EAAAA,EAAAA,KAACsC,EAAAA,GAAM,CACHL,cAAeA,EACfM,SAAU,SAACC,EAAMC,GAAmB,IAAhBC,EAASD,EAATC,WAfhC,SAA2BF,GACvBR,EAAkBQ,EACtB,CAcgBG,CAAmBH,GACnBE,EAAW,CAACF,OAAQ,IAAK,EAAEtB,SAC9B,kBACGC,EAAAA,EAAAA,MAACyB,EAAAA,GAAI,CAAA1B,SAAA,EACDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACxB2B,OAAOC,KAAKb,GACRc,QAAO,SAAAC,GACJ,MAAgB,mBAARA,GACO,8BAARA,GACQ,aAARA,GACQ,WAARA,GACQ,WAARA,CACX,IAAIC,KAAI,SAAAvB,GACT,OAAOP,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EAAiBlB,EAAAA,EAAAA,KAAA,QAAAkB,SAAOQ,IAAa,KAAC1B,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACjC,UAAU,QAAoBkC,KAAMzB,EAAO0B,YAAa1B,GAAjCA,KAA1DA,EACpB,KAEAP,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,sBAEHlB,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACG,KAAM,WAAYF,KAAM,iBAAkB7B,QAASY,OAE7DD,EAAcE,iBAAkBhB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EAC7BlB,EAAAA,EAAAA,KAAA,QAAAkB,SAAM,sBACNlB,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CACFC,KAAM,4BACNC,YAAa,wBAGrBjC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BlB,EAAAA,EAAAA,KAAA,QAAAkB,SAAM,cACL2B,OAAOC,KAAKb,EAAcqB,UACtBL,KAAI,SAAAD,GAID,OAHoC,OAAhCf,EAAcqB,SAASN,KACxBf,EAAcqB,SAASN,GAAO,KAG7B7B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIlB,EAAAA,EAAAA,KAAA,QAAAkB,SAA2B8B,GAAG,QAAAO,OAAXP,KACnBhD,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CAACjC,UAAU,QAAkBkC,KAAI,YAAAI,OAAcP,GAAOI,YAAaJ,GAA3CA,KAAiD,OAAAO,OAFlEP,GAKzB,WAIZhD,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,GAAEC,UACblB,EAAAA,EAAAA,KAACwD,EAAAA,EAAa,CAACC,KAAM,OAAQJ,KAAM,eAEpC,KAK3B,CClEO,SAASK,EAAWrD,GAA+C,IAA7CN,EAAKM,EAALN,MAAO4D,EAAOtD,EAAPsD,QAASC,EAASvD,EAATuD,UAAWC,EAAexD,EAAfwD,gBACpDvD,GAAgCC,EAAAA,EAAAA,WAAS,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAxCQ,EAAQL,EAAA,GAAEM,EAAWN,EAAA,GAE5B,IAAKV,EAAMgC,QACP,OAAO/B,EAAAA,EAAAA,KAAC8D,EAAAA,EAAS,IAcrB,OACI3C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBlB,EAAAA,EAAAA,KAAA,OAAK+D,IAAKhE,EAAMgC,QAAQiC,OAAOC,MAAQlE,EAAMgC,QAAQiC,OAAOC,MAAQC,EAASC,IAAI,KAC/ER,IAAW3D,EAAAA,EAAAA,KAAA,SAAOqD,KAAM,OAAQ9B,SAf9C,SAA+BC,GACvBA,EAAEY,OAAOgC,MAAMC,QACfT,EAAUpC,EAAEY,OAAOgC,MAAM,GAEjC,QAaQpE,EAAAA,EAAAA,KAACI,EAAsB,CAACL,MAAOA,IAE9Be,GACKd,EAAAA,EAAAA,KAAC8B,EAAe,CAACC,QAAShC,EAAMgC,QAASC,kBAdvD,SAA6BsC,GACzBT,EAAgBS,GAChBvD,GAAY,EAChB,KAYcf,EAAAA,EAAAA,KAACuE,EAAW,CAACxC,QAAShC,EAAMgC,QAAS4B,QAASA,EAASa,aAAc,WAAOzD,GAAY,EAAK,MAI/G,CAEA,SAASwD,EAAW9B,GAAoC,IAAlCV,EAAOU,EAAPV,QAAS4B,EAAOlB,EAAPkB,QAASa,EAAY/B,EAAZ+B,aACpC,OACIrD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,CAC5ByC,IAAW3D,EAAAA,EAAAA,KAACwD,EAAAA,EAAa,CAACC,KAAM,OAAQgB,OAAQD,KAClDrD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,CAAC,cAAYa,EAAQ2C,aAChDvD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,CAAC,aAAWa,EAAQM,YAChDlB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CAAC,sBAAoBa,EAAQI,eAAiB,MAAQ,QAClFJ,EAAQI,iBACLhB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CAAC,cAAYa,EAAQ4C,iCAG1DxD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAAC,aACnB2B,OAAOC,KAAKf,EAAQuB,UAAUL,KAAI,SAACD,GAC9C,OAAOhD,EAAAA,EAAAA,KAAC4E,EAAQ,CAAWC,WAAY7B,EAAK8B,aAAc/C,EAAQuB,SAASN,IAArDA,EAC1B,SAKZ,CAEA,SAAS4B,EAAQG,GAA+B,IAA5BF,EAAUE,EAAVF,WAAYC,EAAYC,EAAZD,aAC5B,OACI3D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAM2D,EAAW,KAAGC,IAE5B,C,aCnEO,SAASE,EAAI3E,GAAgB,IAAd4E,EAAI5E,EAAJ4E,KAAMC,EAAI7E,EAAJ6E,KACxB,OACI/D,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAChClB,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,kBACfjB,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,aAAYC,SAAE+D,KAC7BjF,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,CAAC,UAAQgE,SAIrD,CCHO,SAASC,EAAO9E,GAAa,IAAVN,EAAKM,EAALN,MAEtB,OACIoB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BlB,EAAAA,EAAAA,KAAA,OAAAkB,UACIlB,EAAAA,EAAAA,KAAA,MAAAkB,SAAI,eAERC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BlB,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,qBAAoBC,UAC/BlB,EAAAA,EAAAA,KAACoF,EAAW,CAACC,kBAAmBtF,EAAMsF,kBAAmBC,QAASvF,EAAMuF,aAE5EtF,EAAAA,EAAAA,KAAA,OAAAkB,SACKnB,EAAMwF,UAAUtC,KAAI,SAAAuC,GAAE,OAAIxF,EAAAA,EAAAA,KAACgF,EAAI,CAAaC,KAAMO,EAAGP,KAAMC,KAAMM,EAAGC,MAAOC,GAAIF,EAAGE,IAA7CF,EAAGE,GAA+C,WAK5G,CAEA,SAASN,EAAW3C,GAAiC,IAA9B4C,EAAiB5C,EAAjB4C,kBAAmBC,EAAO7C,EAAP6C,QAMtC,OACItF,EAAAA,EAAAA,KAACsC,EAAAA,GAAM,CACHL,cAAe,CAAE0D,YAAa,IAC9BpD,SAAU,SAACC,EAAMuC,GAAmB,IAAhBrC,EAASqC,EAATrC,WART,SAACF,GAChB6C,EAAmB7C,GACnB8C,GACJ,CAMYM,CAAYpD,EAAOmD,aACnBjD,EAAW,CAACF,OAAQ,IAAK,EAAEtB,SAC9B,kBACGC,EAAAA,EAAAA,MAACyB,EAAAA,GAAI,CAAA1B,SAAA,EACDlB,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,GAAEC,UACblB,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CACFC,KAAM,cACN0C,GAAI,WACJzC,YAAa,kBAGrBpD,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,GAAEC,UACblB,EAAAA,EAAAA,KAACwD,EAAAA,EAAa,CAACC,KAAM,OAAQJ,KAAM,eAEpC,GAIvB,CChDA,SAASyC,EAAgB/F,GACrB,OACIC,EAAAA,EAAAA,KAACmF,EAAO,CACJpF,MAAOA,GAGnB,CAoBA,OAAeD,EAAAA,EAAAA,KAlBf,SAAyBL,GACrB,MAAO,CACHsG,YAAatG,EAAMuG,YAAYD,YAC/BR,UAAW9F,EAAMuG,YAAYC,MAErC,IAEA,SAA4BC,GACxB,MAAO,CACHb,kBAAmB,SAACc,GAChBD,GAASE,EAAAA,EAAAA,IAA+BD,GAC5C,EACAb,QAAS,WACNY,GAASG,EAAAA,EAAAA,MACZ,EAER,GAEA,CAA4DC,EAAAA,KAAWR,IC7BhE,SAASS,EAAOlG,GAAgD,IAA9CN,EAAKM,EAALN,MAAO4D,EAAOtD,EAAPsD,QAASC,EAASvD,EAATuD,UAAWC,EAAexD,EAAfwD,gBAChD,OACI1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC7BlB,EAAAA,EAAAA,KAAA,OAAKiB,UAAU,2BAEfjB,EAAAA,EAAAA,KAAC0D,EAAW,CAAC3D,MAAOA,EAAO4D,QAASA,EAASC,UAAWA,EAAWC,gBAAiBA,KACpF7D,EAAAA,EAAAA,KAACwG,EAAgB,MAG7B,C,kCCJMC,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CA+BjB,OA/BiBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAzD,IAAA,iBAAAtB,MAElB,WACI,IAAIwF,EAASC,KAAKpH,MAAMqH,OAAOC,OAAOH,OAEjCA,IACDA,EAASC,KAAKpH,MAAMuH,aAAaC,YAErCJ,KAAKpH,MAAMyH,eAAeN,GAC1BC,KAAKpH,MAAM0H,UAAUP,EACzB,GAAC,CAAAlE,IAAA,oBAAAtB,MAED,WACIyF,KAAKO,gBACT,GAAC,CAAA1E,IAAA,qBAAAtB,MAED,SAAmBiG,EAAwBC,EAAwBC,GAC3DV,KAAKpH,MAAMqH,OAAOC,OAAOH,SAAWS,EAAUP,OAAOC,OAAOH,QAC5DC,KAAKO,gBAEb,GAAC,CAAA1E,IAAA,SAAAtB,MAED,WACI,OACI1B,EAAAA,EAAAA,KAACuG,EAAO,CACJ5C,SAAUwD,KAAKpH,MAAMqH,OAAOC,OAAOH,OACnCnH,MAAOoH,KAAKpH,MACZ6D,UAAWuD,KAAKpH,MAAM6D,UACtBC,gBAAiBsD,KAAKpH,MAAM8D,iBAGxC,KAAC4C,CAAA,CA/BiB,CAASH,EAAAA,WA0D/B,OAAewB,EAAAA,EAAAA,KACXhI,EAAAA,EAAAA,KAzBJ,SAAyBL,GACrB,MAAO,CACHsC,QAAStC,EAAMuG,YAAYjE,QAC3BvB,OAAQf,EAAMuG,YAAYxF,OAC1B8G,aAAc7H,EAAME,KAAKuH,OAEjC,GAmB6B,CAACM,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW5F,aAAAA,EAAAA,GAAc+B,UAAAA,EAAAA,GAAWC,gBAAAA,EAAAA,MAjBlF,SAAoBhE,GAahB,OAZA,SAAiCE,GAC7B,IAAIgI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXb,GAASc,EAAAA,EAAAA,MACb,OACInI,EAAAA,EAAAA,KAACH,GAASI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFF,GAAK,IACTqH,OAAQ,CAACW,SAAAA,EAAUE,SAAAA,EAAUZ,OAAAA,KAGzC,CAGJ,GAKIzH,EAAAA,EAHJ,CAIE6G,E","sources":["componenst/hocs/withAuthRedirect.js","componenst/profile/profileInfo/ProfileStatusWithHooks.js","componenst/profile/profileInfo/ProfileDataForm.js","componenst/profile/profileInfo/ProfileInfo.js","componenst/profile/myposts/posts/Post.js","componenst/profile/myposts/MyPosts.js","componenst/profile/myposts/MyPostsContainer.js","componenst/profile/Profile.js","componenst/profile/ProfileContainer.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect(Component) {\r\n     const RedirectComponent = (props) =>  {\r\n        if (!props.isAuth) return <Navigate to={'/login'} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect, {})(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\nexport default function ProfileStatusWithHooks({props}) {\r\n    const [status, setStatus] = useState(props.status)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    function activateEditMode () {\r\n        return setEditMode(true)\r\n    }\r\n\r\n    function deactivateEditMOde () {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    function onStatusChange(e) {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile__status__wrapper\">\r\n            <div className=\"profile__status\" style={{display:\"flex\"}}>\r\n                <div>Status: </div>\r\n                {!editMode &&\r\n                    <div onClick={activateEditMode} className=\"status__text\">\r\n                        {status || '----'}\r\n                    </div>}\r\n\r\n                {editMode &&\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMOde}\r\n                        className=\"status__input\"\r\n                        value={status}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import RoundedButton from \"../../common/buttons/rounded-btn/RoundedButton\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\n\r\nexport default function ProfileDataForm({profile, updateProfileData}) {\r\n    function addNewProfileData(values) {\r\n        updateProfileData(values)\r\n    }\r\n\r\n    const initialValues = profile\r\n    !profile.aboutMe ? initialValues.aboutMe = '' : initialValues.aboutMe = profile.aboutMe\r\n\r\n    function jobLookingStatus(e) {\r\n        initialValues.lookingForAJob = e.target.value !== 'true';\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile__form\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(values, {resetForm}) => {\r\n                    addNewProfileData( values )\r\n                    resetForm( {values: ''} )}}>\r\n                {() => (\r\n                    <Form>\r\n                        <div className=\"form__fields\">\r\n                            {Object.keys(initialValues)\r\n                                .filter(key => {\r\n                                    return (key !== 'lookingForAJob'\r\n                                        && key !== 'lookingForAJobDescription'\r\n                                        && key !== 'contacts'\r\n                                        && key !== 'photos'\r\n                                        && key !== 'userId')\r\n                                } ).map(value => {\r\n                               return <div key={value}><span>{value}</span> <Field className=\"field\" key={value} name={value} placeholder={value}/></div>\r\n                            })}\r\n\r\n                            <label>\r\n                                Looking for a job:\r\n                                <Field type={'checkbox'} name={'lookingForAJob'} onClick={jobLookingStatus}/>\r\n                            </label>\r\n                            {initialValues.lookingForAJob && <div>\r\n                                <span>About my skills:</span>\r\n                                <Field\r\n                                    name={'lookingForAJobDescription'}\r\n                                    placeholder={'what about job?'}/>\r\n                            </div>}\r\n\r\n                            <div className=\"form__contacts\">\r\n                                <span>CONTACTS:</span>\r\n                                {Object.keys(initialValues.contacts)\r\n                                    .map(key => {\r\n                                        if (initialValues.contacts[key] === null) {\r\n                                           initialValues.contacts[key] = ''\r\n                                        }\r\n                                        return (\r\n                                            <div key={`div-${key}`}>\r\n                                                <span key={`span-${key}`}>{key}</span>\r\n                                                <Field className=\"field\" key={key} name={`contacts.${key}`} placeholder={key}/>\r\n                                            </div>\r\n                                        )\r\n                                    } )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"\">\r\n                            <RoundedButton logo={'Send'} type={'submit'}/>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import Preloader from \"../../common/Preloader\";\r\nimport avaPlug from \"../../../assets/images/ava.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {useState} from \"react\";\r\nimport RoundedButton from \"../../common/buttons/rounded-btn/RoundedButton\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nexport function ProfileInfo({props, isOwner, savePhoto, saveProfileData}){\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    function onAvatarPhotoSelected(e) {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    function onUpdateProfileData(formData){\r\n        saveProfileData(formData)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"info__wrapper\">\r\n            <div className=\"info__avatar\">\r\n                <img src={props.profile.photos.small ? props.profile.photos.small : avaPlug} alt=\"\"/>\r\n                { isOwner && <input type={'file'} onChange={onAvatarPhotoSelected}/> }\r\n            </div>\r\n            <ProfileStatusWithHooks props={props}/>\r\n\r\n            {editMode\r\n                ? <ProfileDataForm profile={props.profile} updateProfileData={onUpdateProfileData}/>\r\n                : <ProfileData profile={props.profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ProfileData({profile, isOwner, goToEditMode}) {\r\n    return (\r\n        <div className=\"info__description\">\r\n            { isOwner && <RoundedButton logo={'edit'} action={goToEditMode}/> }\r\n            <div className=\"info__name\">Full name: {profile.fullName}</div>\r\n            <div className=\"info__about\">About me: {profile.aboutMe}</div>\r\n            <div className=\"job__wrapper\">\r\n                <div className=\"job__looking\">Looking for a job: {profile.lookingForAJob ? 'YES' : 'NO'}</div>\r\n                {profile.lookingForAJob &&\r\n                    <div className=\"job__looking\">My skills: {profile.lookingForAJobDescription}</div>\r\n                }\r\n            </div>\r\n            <div className=\"contact__wrapper\">\r\n                Contacts: {Object.keys(profile.contacts).map((key) => {\r\n                return <Contacts key={key} contactKey={key} contactValue={profile.contacts[key]}/>\r\n            })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Contacts ({contactKey, contactValue}) {\r\n    return (\r\n        <div>{contactKey}: {contactValue}</div>\r\n    )\r\n}","export function Post({post, like}) {\r\n    return (\r\n        <div className=\"post__item__wrapper\">\r\n            <div className=\"post__avatar\"></div>\r\n            <div className=\"post__text\">{post}</div>\r\n            <div className=\"post__setup\">\r\n                <div className=\"post__likes\">Likes: {like}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Post} from \"./posts/Post\";\r\nimport React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport RoundedButton from \"../../common/buttons/rounded-btn/RoundedButton\";\r\n\r\n\r\n\r\nexport function MyPosts({ props }) {\r\n\r\n    return (\r\n        <div className=\"posts__wrapper\">\r\n            <div>\r\n                <h3>My post</h3>\r\n            </div>\r\n            <div className=\"post__wrapper\">\r\n                <div className=\"new__post__wrapper\">\r\n                    <AddPostForm updateNewPostText={props.updateNewPostText} addPost={props.addPost}/>\r\n                </div>\r\n                <div>\r\n                    {props.postsData.map(el => <Post key={el.id} post={el.post} like={el.likes} id={el.id}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddPostForm ({updateNewPostText, addPost}) {\r\n    const addNewPost = (values) => {\r\n        updateNewPostText( values )\r\n        addPost()\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ newPostBody: \"\" }}\r\n            onSubmit={(values, {resetForm}) => {\r\n                addNewPost( values.newPostBody )\r\n                resetForm( {values: ''} )}}>\r\n            {() => (\r\n                <Form>\r\n                    <div className=\"\">\r\n                        <Field\r\n                            name={'newPostBody'}\r\n                            as={'textarea'}\r\n                            placeholder={'enter text'}/>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                        <RoundedButton logo={'Send'} type={'submit'}/>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../state/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction MyPostContainer(props) {\r\n    return (\r\n        <MyPosts\r\n            props={props}\r\n        />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postsData: state.profilePage.posts\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        },\r\n        addPost: () => {\r\n           dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(MyPostContainer))","import {ProfileInfo} from \"./profileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myposts/MyPostsContainer\";\r\n\r\nexport function Profile({props, isOwner, savePhoto, saveProfileData}) {\r\n    return (\r\n        <div className='profile__wrapper'>\r\n            <div className='profile__img__wrapper'>\r\n            </div>\r\n            <ProfileInfo props={props} isOwner={isOwner} savePhoto={savePhoto} saveProfileData={saveProfileData}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Profile} from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfileData, updateStatus} from \"../../state/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hocs/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    profileRefresh() {\r\n        let userId = this.props.router.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.loggedUserId.toString()\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.profileRefresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.profileRefresh()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                isOwner={!this.props.router.params.userId}\r\n                props={this.props}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfileData={this.props.saveProfileData}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        loggedUserId: state.auth.userId,\r\n    }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfileData}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","_jsx","_objectSpread","Navigate","to","ProfileStatusWithHooks","_ref","_useState","useState","status","_useState2","_slicedToArray","setStatus","_useState3","_useState4","editMode","setEditMode","useEffect","className","children","_jsxs","style","display","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataForm","profile","updateProfileData","initialValues","jobLookingStatus","lookingForAJob","target","aboutMe","Formik","onSubmit","values","_ref2","resetForm","addNewProfileData","Form","Object","keys","filter","key","map","Field","name","placeholder","type","contacts","concat","RoundedButton","logo","ProfileInfo","isOwner","savePhoto","saveProfileData","Preloader","src","photos","small","avaPlug","alt","files","length","formData","ProfileData","goToEditMode","action","fullName","lookingForAJobDescription","Contacts","contactKey","contactValue","_ref3","Post","post","like","MyPosts","AddPostForm","updateNewPostText","addPost","postsData","el","likes","id","newPostBody","addNewPost","as","MyPostContainer","newPostText","profilePage","posts","dispatch","text","updateNewPostTextActionCreator","addPostActionCreator","React","Profile","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","router","params","loggedUserId","toString","getUserProfile","getStatus","profileRefresh","prevProps","prevState","snapshot","compose","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}